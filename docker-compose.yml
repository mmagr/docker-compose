version: '2.1'
services:

#  certs:
#    image: nginx
#    restart: always
#    depends_on:
#      - apigw
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /etc/letsencrypt:/certs
#      - ./certs/default.conf:/etc/nginx/conf.d/default.conf

  persistence:
    image: "dojot/persister"
    restart: always
    environment:
      PIPELINE_WORKERS: 16
    extra_hosts:
      - "mongodb:10.4.1.19"
    networks:
      default:
        aliases:
          - sth

  history:
    image: "dojot/history"
    restart: always
    environment:
      FALCON_SETTINGS_MODULE: history.settings.docker
    extra_hosts:
      - "mongodb:10.4.1.19"

#  mongodb:
#    image: "mongo:3.2"
#    restart: always
#    user: "mongodb"

  mqtt:
    image: ansi/mosquitto
    restart: always
    ports:
      - "1883:1883"
#      - "8883:8883"
#    volumes:
#      - ./mqtt/mosquitto.conf:/usr/local/src/mosquitto-1.4.13/mosquitto.conf:Z
#      - ./certs/ca.crt:/usr/local/src/mosquitto-1.4.13/certs/ca.crt:Z
#      - ./certs/server.crt:/usr/local/src/mosquitto-1.4.13/certs/server.crt:Z
#      - ./certs/server.key:/usr/local/src/mosquitto-1.4.13/certs/server.key:Z
#    command: "/usr/local/sbin/mosquitto -c /usr/local/src/mosquitto-1.4.13/mosquitto.conf"

  iotagent:
    image: dojot/iotagent-json:0.2.0-nightly20171113
    restart: always
    depends_on:
      - mqtt
    extra_hosts:
      - "mongodb:10.4.1.19"
    volumes:
      - ./iotagent/config.js:/opt/iotajson/config.js:Z
      - ./certs/ca.crt:/opt/iotajson/certs/ca.crt:Z
      - ./certs/iotagent.crt:/opt/iotajson/certs/iotagent.crt:Z
      - ./certs/iotagent.key:/opt/iotajson/certs/iotagent.key:Z
    networks:
      default:
        aliases:
          - idas

#  coap:
#    image: "telefonicaiot/lightweightm2m-iotagent:latest"
#    restart: always
#    depends_on:
#      - mongodb
#    ports:
#      - "127.0.0.1:4041:4041"
#      - 5684:5684/udp

  gui:
    image: agrotracking/gui
    restart: always

  orion:
    image: dojot/fiware-orion:latest
    restart: always
    ports:
      - "127.0.0.1:1026:1026"
    command: -dbhost mongodb
    extra_hosts:
      - "mongodb:10.4.1.19"


  device-manager:
    image: dojot/device-manager:0.2.0-nightly20171113
    restart: always
    extra_hosts:
      - "mongodb:10.4.1.19"
    networks:
      default:
        aliases:
          - devm

  auth:
    image: dojot/auth:latest
    restart: always
    extra_hosts:
      - "mongodb:10.4.1.19"
    depends_on:
      - apigw
      - redis
      - postgres
    environment:
      AUTH_DB_HOST: "postgres"
      AUTH_DB_USER: "kong"
      AUTH_KONG_URL: "http://kong:8001"
      AUTH_CACHE_NAME: "redis"
      AUTH_CACHE_HOST: "redis"


  redis:
    image: redis
    restart: always

  postgres:
    image: "postgres:9.4"
    restart: always
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_DB: "kong"
    networks:
      default:
        aliases:
          - kong-db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

#  kong-migration:
#    image: dojot/kong:0.2.0-nightly20180119
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      - KONG_DATABASE=postgres
#      - KONG_PG_HOST=postgres
#    command: kong migrations up

  apigw:
    image: dojot/kong:0.2.0-nightly20180119
    restart: always
    depends_on:
      - postgres
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      # - "7946:7946"
      # - "7946:7946/udp"  # cluster
    environment:
      # KONG_DATABASE: "cassandra"
      KONG_DATABASE: "postgres"
      KONG_CASSANDRA_CONTACT_POINTS: "cassandra"
      KONG_PG_HOST: "postgres"
    networks:
      default:
        aliases:
          - kong

#  pdp-ws:
#    image: dojot/pdp-ws:latest
#    restart: always
#    depends_on:
#      - postgres
#    ports:
#      - "9763:9763"
#    volumes:
#      - ./pdpws/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml

  perseo-core:
    image: telefonicaiot/perseo-core
    restart: always
    command: -perseo_fe_url perseo-fe:9090

  perseo-fe:
    image: dojot/perseo-fe:latest
    restart: always
    ports:
      - "127.0.0.1:9090:9090"
    depends_on:
      - perseo-core
    extra_hosts:
      - "mongodb:10.4.1.19"
    environment:
      - PERSEO_MONGO_HOST=mongodb
      - PERSEO_CORE_URL=http://perseo-core:8080
      - PERSEO_ORION_URL=http://orion:1026/NGSI10/updateContext

  mashup:
    image: dojot/mashup:latest
    restart: always
    extra_hosts:
      - "mongodb:10.4.1.19"
